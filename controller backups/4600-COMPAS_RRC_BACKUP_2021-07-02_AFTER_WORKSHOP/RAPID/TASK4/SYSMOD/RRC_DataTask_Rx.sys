MODULE RRC_DataTask_Rx(SYSMODULE)
    !***********************************************************************************
    !
    ! ETH Zurich / Robotic Fabrication Lab
    ! HIB C 13 / Stefano-Franscini-Platz 1
    ! CH-8093 Zurich
    !
    !***********************************************************************************
    !
    ! PROJECT     :  RRC - Rapid Robot Communication
    !
    ! FUNCTION    :  Includ all Task specific Data's
    !
    ! AUTHOR      :  Philippe Fleischmann
    !
    ! EMAIL       :  rrc@arch.ethz.ch
    !
    ! HISTORY     :  2019.02.22
    !
    ! Copyright   :  ETH Zurich (CH) 2019
    !                - Philippe Fleischmann
    !                - Michael Lyrenmann
    !                - Gonzalo Casas
    !
    ! License     :  This code base is governed by an EULA (End-User License Agreement)
    !                which you have received together with the software.
    !                You are not allowed to use the software on a real robots
    !                without a signed EULA.
    !
    !                A copy of the EULA content is in the controller task (T_CTRL).
    !
    !***********************************************************************************

    !************************************************
    ! Declaration :     bool
    !************************************************
    !
    CONST bool b_RRC_Run:=TRUE;
    !
    TASK PERS bool b_RRC_SocketActiv:=TRUE;
    TASK PERS bool b_RRC_PrintPrio1:=FALSE;
    TASK PERS bool b_RRC_PrintPrio2:=FALSE;
    !
    TASK PERS bool b_RRC_BufFullMa{n_RRC_NumOfCha}:=[FALSE,FALSE,FALSE,FALSE];
    TASK PERS bool b_RRC_BufFullRob{n_RRC_NumOfCha}:=[FALSE,FALSE,FALSE,FALSE];
    TASK PERS bool b_RRC_LogHelper{n_RRC_NumOfCha}:=[FALSE,FALSE,FALSE,FALSE];
    !
    TASK PERS bool b_RRC_FirstProtocolAfterPPMain:=FALSE;

    !************************************************
    ! Declaration :     num
    !************************************************
    !
    CONST num n_RRC_NumOfCha:=4;
    CONST num n_RRC_RecMinData:=49;
    CONST num n_RRC_NoOfByMsgLen:=4;
    CONST num n_RRC_TimeOutRecRobSocRec:=10;
    !
    TASK PERS num n_RRC_WritePtrBufCtrl{n_RRC_NumOfCha}:=[0,0,0,0];
    TASK PERS num n_RRC_WritePtrBufRob{n_RRC_NumOfCha}:=[2,4,0,0];
    TASK PERS num n_RRC_SIDExpected{n_RRC_NumOfCha}:=[1,1,0,0];
    TASK PERS num n_RRC_SIDIs{n_RRC_NumOfCha}:=[70001,0,0,0];
    !
    VAR num n_RRC_MsgLenRob{n_RRC_NumOfCha};
    VAR num n_RRC_NoOfRecBytesRob{n_RRC_NumOfCha};

    !************************************************
    ! Declaration :     string
    !************************************************
    !  
    TASK PERS string st_RRC_EvLogMsgHeader:="RRC -- Receiver";
    TASK PERS string st_RRC_SIDRestart:="S-ID User code restarted";
    !
    TASK PERS string st_RRC_UIAnswer:="Stop";
    TASK PERS string st_RRC_ActMsg1:="Expected protocol version: 1.0";
    TASK PERS string st_RRC_ActMsg2:="Received protocol version: 2.0";
    TASK PERS string st_RRC_ActMsg3:="Expected: 2";
    TASK PERS string st_RRC_ActMsg4:="Received: 70001";
    TASK PERS string st_RRC_ActMsg5:="";
    TASK PERS string st_RRC_ActBtn1:="Stop";
    TASK PERS string st_RRC_ActBtn2:="100 mm/s";
    TASK PERS string st_RRC_ActBtn3:="Set my Speed";
    TASK PERS string st_RRC_ActBtn4:="";
    TASK PERS string st_RRC_ActBtn5:="";
    TASK PERS string st_RRC_Header:="Protocol mismatch";
    !  
    VAR string st_RRC_IP_ClientRec{n_RRC_NumOfCha}:=["","","",""];

    !************************************************
    ! Declaration :     clock
    !************************************************
    !
    VAR clock clk_RRC_ReadAndUnpack;
    VAR clock clk_RRC_MsgInUntilMsgOut;

    !************************************************
    ! Declaration :     RRC_Protokol
    !************************************************
    !
    CONST RRC_Protocol pro_RRC_Empty:=[[0,0,0,0],[0,0,0,"",0,0,"",0,0,0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]];
    !
    VAR RRC_Protocol pro_RRC_ActMsgRob:=[[0,0,0,0],[0,0,0,"",0,0,"",0,0,0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]];
    !
    TASK PERS RRC_Protocol pro_RRC_ActMsgTemp:=[[0,0,0,0],[0,0,0,"",0,0,"",0,0,0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]];
    !
    TASK PERS RRC_Protocol pro_RRC_ActMsgRec{n_RRC_NumOfCha}:=[
    [[79,2,1.62525E+09,173],[1,0,13,"r_RRC_SetTool",0,0,"",0,1,14,"ECL_gripper_EB",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,1341.27,1363.25,879.994,7.97131E-07,1,3.57427E-06,-4.60414E-06,0,0,0,0,0,0,100,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]],
    [[79,2,1.62525E+09,838],[1,0,13,"r_RRC_SetTool",0,0,"",0,1,14,"ECL_gripper_EB",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,-491.82,1363.26,879.964,4.05663E-06,1,-2.4159E-06,-1.32326E-06,0,0,0,0,0,0,100,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]],
    [[120,4,1.55775E+09,695],[11,0,12,"r_RRC_MoveL",1,0,"",0,0,0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",15,542.04,-200,237.57,0,0,1,0,28000,-3400,-3138,0,0,0,230,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]],
    [[120,4,1.55775E+09,695],[11,0,12,"r_RRC_MoveL",1,0,"",0,0,0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",15,542.04,-200,237.57,0,0,1,0,28000,-3400,-3138,0,0,0,230,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]]];

    !************************************************
    ! Declaration :     rawbytes
    !************************************************
    !
    VAR rawbytes rb_RRC_BufferMsgLenRob{n_RRC_NumOfCha};
    VAR rawbytes rb_RRC_BufferRob{n_RRC_NumOfCha};

    !************************************************
    ! Declaration :     socketdev
    !************************************************
    !  
    VAR socketdev sod_RRC_ServerRec{n_RRC_NumOfCha};
    VAR socketdev sod_RRC_ClientRec{n_RRC_NumOfCha};

    !************************************************
    ! Declaration :     RRC_buffer_msg
    !************************************************
    !
    CONST RRC_buffer_msg bmEmpty:=[[0,0,0,"",0,0,"",0,0,0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],FALSE];
ENDMODULE